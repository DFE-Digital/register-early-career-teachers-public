name: Refresh DB from production DB
on:
  workflow_dispatch:
    inputs:
      environment:
        description: GitHub environment to refresh from
        type: choice
        default: production
        options:
          - production
        required: true
      target_environment:
        description: GitHub environment to refresh to
        type: choice
        default: migration
        options:
          - migration
          - paritycheck
        required: true
      exclude-jobs:
        description: Exclude jobs tables
        type: boolean
        default: true

jobs:
  refresh-db:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Refresh DB
        uses: ./.github/actions/refresh-database
        with:
          environment: production
          target_environment: ${{ inputs.target_environment }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          exclude-jobs: ${{ inputs.exclude-jobs }}

      - name: Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
        with:
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install kubectl
        uses: DFE-Digital/github-actions/set-kubectl@master

      - name: Set AKS credentials
        shell: bash
        run: make ci ${{ inputs.target_environment }} get-cluster-credentials

      - name: Generate known keys
        shell: bash
        run: |
          kubectl -n cpd-production exec deployment/cpd-ec2-${{ inputs.target_environment }}-web -- /bin/sh -c "cd /app && bundle exec rails runner ParityCheck::TokenProvider.new.generate!"

      - name: Seed parity check endpoints
        shell: bash
        run: |
          kubectl -n cpd-production exec deployment/cpd-ec2-${{ inputs.target_environment }}-web -- /bin/sh -c "cd /app && bundle exec rails runner ParityCheck::SeedEndpoints.new.plant!"

      - name: Clear User OTP tokens
        shell: bash
        run: |
          kubectl -n cpd-production exec deployment/cpd-ec2-${{ inputs.target_environment }}-web -- /bin/sh -c "cd /app && bundle exec rails runner \"User.update_all(otp_secret: nil)\""
          
