name: Directly copy an env main db into the snapshot db, bypassing Azure Storage

on:
  workflow_dispatch:
    inputs:
      environment:
        description: GitHub environment to backup
        type: choice
        default: production
        options:
          - staging
          - production
        required: true
      exclude-jobs:
        description: Exclude jobs tables
        type: boolean
        default: false

env:
  SERVICE_NAME: cpd-ec2
  SERVICE_SHORT: cpdec2
  TF_VARS_PATH: config/terraform/application/config

permissions:
  id-token: write

jobs:
  backup-main-db-and-restore-snapshot:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment || 'production' }}
    env:
      DEPLOY_ENV: ${{ inputs.environment || 'production'  }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Set Azure environment variables
        run: |
          # Load environment-specific configuration
          source config/global_config/${DEPLOY_ENV}.sh
          tf_vars_file=${TF_VARS_PATH}/${DEPLOY_ENV}.tfvars.json

          # Set Azure environment variables
          echo "KEYVAULT_NAME=${AZURE_RESOURCE_PREFIX}-${SERVICE_SHORT}-${CONFIG_SHORT}-inf-kv" >> $GITHUB_ENV

      - name: Fetch secrets from key vault
        uses: azure/CLI@v2
        id: key-vault-secrets
        with:
          inlineScript: |
            SLACK_WEBHOOK=$(az keyvault secret show --name "SLACK-WEBHOOK" --vault-name ${KEYVAULT_NAME} --query "value" -o tsv)
            echo "::add-mask::$SLACK_WEBHOOK"
            echo "SLACK_WEBHOOK=$SLACK_WEBHOOK" >> $GITHUB_OUTPUT

      - name: Backup and restore snapshot
        uses: ./.github/actions/directly-backup-and-restore-snapshot-database
        with:
          environment: ${{ inputs.environment || 'production' }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          app-name: ${{ env.SERVICE_NAME }}-${{ inputs.environment || 'production' }}-web
          slack-webhook: ${{ steps.key-vault-secrets.outputs.SLACK_WEBHOOK }}
          exclude-jobs: ${{ inputs.exclude-jobs }}
