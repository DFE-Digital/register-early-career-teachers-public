name: Nightly copy production main db into snapshot db keeping no backup in Azure Storage

on:
  workflow_dispatch:
    inputs:
      environment:
        description: GitHub environment to backup and restore
        type: choice
        default: production
        options:
          - staging
          - production
        required: true

  schedule:
    - cron: "45 3 * * *" # 03:45 UTC

env:
  SERVICE_NAME: cpd-ec2
  SERVICE_SHORT: cpdec2
  TF_VARS_PATH: config/terraform/application/config

jobs:
  backup-production-and-restore-snapshot:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment || 'production' }}
    env:
      DEPLOY_ENV: ${{ inputs.environment || 'production'  }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure environment variables
        run: |
          # Load environment-specific configuration
          source config/global_config/${DEPLOY_ENV}.sh
          tf_vars_file=${TF_VARS_PATH}/${DEPLOY_ENV}.tfvars.json

          # Set Azure environment variables
          echo "KEYVAULT_NAME=${AZURE_RESOURCE_PREFIX}-${SERVICE_SHORT}-${CONFIG_SHORT}-inf-kv" >> $GITHUB_ENV

      - name: Fetch secrets from key vault
        uses: azure/CLI@v2
        id: key-vault-secrets
        with:
          inlineScript: |
            SLACK_WEBHOOK=$(az keyvault secret show --name "SLACK-WEBHOOK" --vault-name ${KEYVAULT_NAME} --query "value" -o tsv)
            echo "::add-mask::$SLACK_WEBHOOK"
            echo "SLACK_WEBHOOK=$SLACK_WEBHOOK" >> $GITHUB_OUTPUT

      - name: Backup and restore snapshot
        uses: ./.github/actions/backup-and-restore-snapshot-database
        with:
          environment: ${{ inputs.environment || 'production' }}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
          app-name: ${{ env.SERVICE_NAME }}-${{ inputs.environment || 'production' }}-web
          slack-webhook: ${{ steps.key-vault-secrets.outputs.SLACK_WEBHOOK }}
