---
openapi: 3.0.1
info:
  title: Lead Provider API
  version: v3
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io/
paths:
  "/api/v3/schools":
    get:
      summary: Retrieve multiple schools scoped to cohort
      tags:
      - Schools
      security:
      - api_key: []
      parameters:
      - name: filter
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/SchoolsFilter"
        style: deepObject
      - name: page
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/PaginationFilter"
        style: deepObject
      - name: sort
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/SortingOptions"
      responses:
        '200':
          description: A list of schools scoped to cohort
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SchoolsResponse"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorisedResponse"
  "/api/v3/schools/{id}":
    get:
      summary: Retrieve a single school scoped to cohort
      tags:
      - Schools
      security:
      - api_key: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/IDAttribute"
      - name: filter
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/SchoolFilter"
        style: deepObject
      responses:
        '200':
          description: A single school scoped to cohort
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SchoolResponse"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorisedResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundResponse"
  "/api/v3/statements":
    get:
      summary: Retrieve multiple statements as part of which the DfE will make output
        payments for participants
      tags:
      - Statements
      security:
      - api_key: []
      parameters:
      - name: filter
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/StatementsFilter"
        style: deepObject
      - name: page
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/PaginationFilter"
        style: deepObject
      responses:
        '200':
          description: A list of statements as part of which the DfE will make output
            payments for participants
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StatementsResponse"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorisedResponse"
  "/api/v3/statements/{id}":
    get:
      summary: Retrieve a single financial statement
      tags:
      - Statements
      security:
      - api_key: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/IDAttribute"
      responses:
        '200':
          description: A single financial statement
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StatementResponse"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorisedResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundResponse"
components:
  securitySchemes:
    api_key:
      type: http
      scheme: bearer
      description: Bearer token
  schemas:
    IDAttribute:
      description: The unique ID of the resource.
      type: string
      format: uuid
      example: d0b4a32e-a272-489e-b30a-cb17131457fc
    UnauthorisedResponse:
      description: Authorization information is missing or invalid.
      type: object
      properties:
        error:
          type: string
          example: 'HTTP Token: Access denied'
    NotFoundResponse:
      description: The requested resource was not found.
      type: object
      properties:
        error:
          type: string
          description: Resource not found
      example:
        error: Resource not found
    PaginationFilter:
      description: Pagination options to navigate through the list of results.
      type: object
      properties:
        page:
          type: integer
          description: The page number to paginate to in the collection. If no value
            is specified it defaults to the first page.
          example: 1
        per_page:
          type: integer
          description: The number items to display on a page. Defaults to 100. Maximum
            is 3000, if the value is greater that the maximum allowed it will fallback
            to 3000.
          example: 10
    SortingOptions:
      description: Sort records being returned.
      enum:
      - created_at
      - "-created_at"
      - updated_at
      - "-updated_at"
      example: created_at
    School:
      description: The data attributes associated with a school
      type: object
      required:
      - id
      - type
      - attributes
      properties:
        id:
          "$ref": "#/components/schemas/IDAttribute"
        type:
          description: The data type.
          type: string
          example: school
          enum:
          - school
        attributes:
          properties:
            name:
              description: The name of the school
              type: string
              nullable: false
              example: School Example
            urn:
              description: The Unique Reference Number (URN) of the school
              type: string
              nullable: false
              example: '123456'
            cohort:
              description: Indicates which call-off contract funds this participant's
                training. 2021 indicates a participant that has started, or will start,
                their training in the 2021/22 academic year.
              type: string
              nullable: false
              example: '2021'
            in_partnership:
              description: Whether or not the school already has an active partnership,
                if it is doing a provider-led training programme
              type: boolean
              nullable: false
              example: false
            induction_programme_choice:
              description: The induction programme the school offers
              type: string
              nullable: false
              example: not_yet_known
              enum:
              - school_led
              - provider_led
              - not_yet_known
            expression_of_interest:
              description: Whether or not the school has expressed interest in doing
                a provider-led training programme for participants
              type: boolean
              nullable: false
              example: false
            created_at:
              description: The date and time the school was created
              type: string
              format: date-time
              example: '2021-05-31T02:22:32.000Z'
            updated_at:
              description: The last time a change was made to this school record by
                the DfE
              type: string
              format: date-time
              example: '2021-05-31T02:22:32.000Z'
    SchoolsFilter:
      description: Filter schools to return more specific results
      type: object
      required:
      - cohort
      properties:
        cohort:
          description: Return schools within the specified cohort.
          type: string
          example: '2021'
        urn:
          description: Return a school with the specified Unique Reference Number
            (URN).
          type: string
          example: '106286'
        updated_since:
          description: Return only records that have been updated since this date
            and time (ISO 8601 date format)
          type: string
          example: '2021-05-13T11:21:55Z'
    SchoolFilter:
      description: Filter schools to return more specific results
      type: object
      required:
      - cohort
      properties:
        cohort:
          description: Return schools within the specified cohort.
          type: string
          example: '2021'
    SchoolResponse:
      description: A single school.
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/School"
    SchoolsResponse:
      description: A list of schools for the given cohort.
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/School"
    Statement:
      description: A financial statement.
      type: object
      required:
      - id
      - type
      - attributes
      properties:
        id:
          "$ref": "#/components/schemas/IDAttribute"
        type:
          description: The data type.
          type: string
          example: statement
          enum:
          - statement
        attributes:
          properties:
            month:
              description: The calendar month which corresponds to the financial statement.
              type: string
              nullable: false
              example: May
            year:
              description: The calendar year which corresponds to the financial statement.
              type: string
              nullable: false
              example: '2022'
            cohort:
              description: The cohort, for example, 2021 or 2025, which the statement
                funds.
              type: string
              nullable: false
              example: '2021'
            cut_off_date:
              description: The milestone cut off or review point for the statement.
              type: string
              nullable: false
              example: '2022-04-30'
            payment_date:
              description: The date we expect to pay you for any declarations attached
                to the statement, which are eligible for payment.
              type: string
              nullable: false
              example: '2022-05-25'
            paid:
              description: Indicates whether the DfE has paid providers for any declarations
                attached to the statement.
              type: boolean
              nullable: false
              example: true
            created_at:
              description: The date the statement was created.
              type: string
              format: date-time
              example: '2021-05-31T02:22:32.000Z'
            updated_at:
              description: The date the statement was last updated.
              type: string
              format: date-time
              example: '2021-05-31T02:22:32.000Z'
    StatementsFilter:
      description: Filter statements to return more specific results
      type: object
      properties:
        cohort:
          description: Return statements associated to the specified cohort or cohorts.
            This is a comma delimited string of years.
          type: string
          example: '2021,2022'
        updated_since:
          description: Return only records that have been updated since this date
            and time (ISO 8601 date format)
          type: string
          example: '2021-05-13T11:21:55Z'
    StatementResponse:
      description: A financial statement.
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/Statement"
    StatementsResponse:
      description: A list of financial statements.
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Statement"
